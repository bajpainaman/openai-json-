{
  "openapi": "3.0.3",
  "info": {
    "title": "Video Processing API",
    "description": "API for uploading videos, processing them, extracting audio, transcribing, and interacting with a chatbot.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/hello": {
      "get": {
        "summary": "Health Check Endpoint",
        "description": "Returns a simple greeting message to verify that the API is running.",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloResponse"
                }
              }
            }
          }
        }
      }
    },
    "/upload": {
      "post": {
        "summary": "Upload Video File",
        "description": "Uploads a video file for processing. Supported formats are mp4, avi, mov, and mkv.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Video file to upload"
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing or invalid file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway - Processing error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/video_url": {
      "post": {
        "summary": "Process Video from YouTube URL",
        "description": "Downloads and processes a video from a provided YouTube URL.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoURLRequest"
              },
              "example": {
                "url": "https://www.youtube.com/watch?v=example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Video URL processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid URL or processing error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/transcribe_audio": {
      "post": {
        "summary": "Transcribe Audio File",
        "description": "Uploads an audio file, transcribes it using the Whisper model, and interacts with the chatbot.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Audio file to transcribe"
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transcription and chat successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscribeAudioResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing or invalid file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Transcription or chat failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/details": {
      "post": {
        "summary": "Get Video Details",
        "description": "Retrieves detailed information about a processed video based on the filename.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DetailsRequest"
              },
              "example": {
                "filename": "example_video.mp4"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Details not found for the given filename",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/chat": {
      "post": {
        "summary": "Chat with Virtual TA",
        "description": "Sends a message to the chatbot and receives a response based on the provided context.",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              },
              "example": {
                "chat_msg": "Can you explain the concept of entropy?"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat response generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing chat message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HelloResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Hello, World!"
          }
        }
      },
      "UploadResponse": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "example": "example_video.mp4"
          }
        }
      },
      "VideoURLRequest": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://www.youtube.com/watch?v=example"
          }
        },
        "required": ["url"]
      },
      "TranscribeAudioResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Transcription and chat successful"
          },
          "transcription": {
            "type": "string",
            "example": "This is the transcribed text from the audio file."
          },
          "chat_response": {
            "type": "string",
            "example": "Sure, entropy is a measure of disorder in a system..."
          }
        }
      },
      "DetailsRequest": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "example": "example_video.mp4"
          }
        },
        "required": ["filename"]
      },
      "DetailsResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://addhiraj-videos.s3.ap-south-1.amazonaws.com/example_video.mp4"
          },
          "title": {
            "type": "string",
            "example": "Sample Video Title"
          },
          "description": {
            "type": "string",
            "example": "This video covers the basics of physics."
          },
          "ts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSegment"
            }
          }
        }
      },
      "TimeSegment": {
        "type": "object",
        "properties": {
          "seq": {
            "type": "string",
            "example": "1"
          },
          "ts_start": {
            "type": "string",
            "example": "00:01:30"
          },
          "ts_end": {
            "type": "string",
            "example": "00:02:30"
          },
          "short_description": {
            "type": "string",
            "example": "Introduction to Entropy"
          },
          "mcqs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MCQ"
            }
          },
          "s3_video_url": {
            "type": "string",
            "format": "uri",
            "example": "https://addhiraj-videos.s3.ap-south-1.amazonaws.com/1_Introduction_to_Entropy.mp4"
          }
        }
      },
      "MCQ": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string",
            "example": "What is entropy?"
          },
          "choices": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["A measure of disorder", "A type of energy", "A fundamental force", "None of the above"]
          },
          "ans": {
            "type": "string",
            "example": "0"
          }
        }
      },
      "ChatRequest": {
        "type": "object",
        "properties": {
          "chat_msg": {
            "type": "string",
            "example": "Can you explain the concept of entropy?"
          }
        },
        "required": ["chat_msg"]
      },
      "ChatResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "response": {
            "type": "string",
            "example": "Sure, entropy is a measure of disorder in a system..."
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Description of the error."
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API key needed to access the endpoints. Format: Bearer {API_KEY}"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
